// ==UserScript==
// @name         Hospital Billing Auto-Discount (Compact + Animated)
// @namespace    http://tampermonkey.net/
// @version      2.2
// @description  Compact and animated discount panel for hospital billing
// @match        http://115.127.77.187:8080/*
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const discountRules = {
        "cbc": 0,
        "crp": 30,
        "x-ray": 20,
        "usg": 20,
        "echo": 15,
        "vacuette": 0
    };

    const imagingTests = ["x-ray", "usg", "echo"];
    let lastSelectedPercent = null;

    function getSuffix(id) {
        const parts = id.split("_");
        return parts.length > 1 ? parts[1] : null;
    }

    function applyDiscount(selectedPercent) {
        lastSelectedPercent = selectedPercent;

        const testFields = document.querySelectorAll('input[name="f04"]');
        let totalDiscount = 0;

        const imagingCapInput = document.querySelector('#imaging-cap-input');
        let manualCap = parseFloat(imagingCapInput?.value);
        if (isNaN(manualCap)) manualCap = null;

        testFields.forEach(testInput => {
            const testName = testInput.value.trim().toLowerCase();
            if (!testName) return;

            const suffix = getSuffix(testInput.id);
            if (!suffix) return;

            const rateInput = document.querySelector(`#f07_${suffix}`);
            if (!rateInput) return;

            const rate = parseFloat(rateInput.value);
            if (isNaN(rate) || rate <= 0) return;

            const isImaging = imagingTests.some(keyword => testName.includes(keyword));
            let allowedPercent = 0;

            if (isImaging) {
                if (manualCap !== null) {
                    allowedPercent = manualCap;
                } else {
                    for (const key in discountRules) {
                        if (testName.includes(key)) {
                            allowedPercent = discountRules[key];
                            break;
                        }
                    }
                }
            } else {
                for (const key in discountRules) {
                    if (testName.includes(key)) {
                        allowedPercent = discountRules[key];
                        break;
                    }
                }
            }

            const finalPercent = Math.min(selectedPercent, allowedPercent);
            const discount = (rate * finalPercent) / 100;
            totalDiscount += discount;
        });

        let roundedDiscount = Math.ceil(totalDiscount / 10) * 10;

        const discountField = document.querySelector('#P423_LUMSUM');
        if (discountField) {
            discountField.value = roundedDiscount;
            discountField.dispatchEvent(new Event('change', { bubbles: true }));
            discountField.dispatchEvent(new KeyboardEvent('keydown', {
                bubbles: true,
                cancelable: true,
                key: 'Enter',
                code: 'Enter',
                keyCode: 13,
                which: 13
            }));

            setTimeout(() => {
                const payableField = document.querySelector('#P423_PAYABLE');
                if (payableField) {
                    const payableValue = parseFloat(payableField.value);
                    if (!isNaN(payableValue)) {
                        const remainder = payableValue % 10;
                        if (remainder !== 0) {
                            roundedDiscount += remainder;
                            discountField.value = roundedDiscount;
                            discountField.dispatchEvent(new Event('change', { bubbles: true }));
                            discountField.dispatchEvent(new KeyboardEvent('keydown', {
                                bubbles: true,
                                cancelable: true,
                                key: 'Enter',
                                code: 'Enter',
                                keyCode: 13,
                                which: 13
                            }));
                        }
                    }
                }
            }, 300);
        }

        const remarkField = document.querySelector('#P423_INV_REMARK');
        if (remarkField) remarkField.value = `DISCOUNT BY DR (${selectedPercent}%)`;
    }

    function createFloatingPanel() {
        const panel = document.createElement('div');
        panel.id = 'floating-discount-panel';

        Object.assign(panel.style, {
            position: 'fixed',
            bottom: '15px',
            right: '15px',
            background: '#fff',
            border: '1px solid #ccc',
            borderRadius: '6px',
            padding: '6px',
            boxShadow: '0 2px 8px rgba(0,0,0,0.1)',
            zIndex: '9999',
            fontFamily: 'Segoe UI, sans-serif',
            width: '120px',
            fontSize: '11px',
            transform: 'translate(0, 0)',
            transition: 'transform 0.2s ease, opacity 0.2s ease'
        });

        panel.innerHTML = `
            <div id="discount-panel-header" style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 4px; cursor: move;">
                <strong style="font-size: 12px;">Discount</strong>
                <button id="toggle-panel" title="Minimize" style="background: none; border: none; font-size: 13px; cursor: pointer;">⚊</button>
            </div>
            <div id="discount-buttons" style="transition: all 0.2s ease-in-out;">
                <div style="display: flex; flex-direction: column; gap: 3px;">
                    <button data-rate="15">15%</button>
                    <button data-rate="20">20%</button>
                    <button data-rate="25">25%</button>
                    <button data-rate="30">30%</button>
                    <button data-rate="40">40%</button>
                    <button id="manual-btn">Manual</button>
                </div>
                <div style="margin-top: 5px;">
                    <label>Cap:
                        <input type="number" id="imaging-cap-input" value="20" step="5" style="width: 36px; font-size: 10px; padding: 1px; text-align: right;">
                        %
                    </label>
                </div>
            </div>
        `;

        document.body.appendChild(panel);

        panel.querySelectorAll('#discount-buttons button').forEach(btn => {
            Object.assign(btn.style, {
                padding: '3px',
                fontSize: '10px',
                width: '100%',
                border: '1px solid #bbb',
                borderRadius: '3px',
                background: '#fafafa',
                cursor: 'pointer',
                transition: 'background 0.2s ease'
            });

            btn.addEventListener('mouseenter', () => btn.style.background = '#eee');
            btn.addEventListener('mouseleave', () => btn.style.background = '#fafafa');
        });

        panel.querySelectorAll('button[data-rate]').forEach(btn => {
            btn.addEventListener('click', () => {
                const rate = parseFloat(btn.getAttribute('data-rate'));
                applyDiscount(rate);
            });
        });

        panel.querySelector('#manual-btn').addEventListener('click', () => {
            const custom = prompt("Enter custom discount percentage:");
            const rate = parseFloat(custom);
            if (!isNaN(rate)) applyDiscount(rate);
        });

        panel.querySelector('#imaging-cap-input').addEventListener('change', () => {
            if (lastSelectedPercent !== null) applyDiscount(lastSelectedPercent);
        });

        const toggleBtn = panel.querySelector('#toggle-panel');
        const buttonSection = panel.querySelector('#discount-buttons');
        toggleBtn.addEventListener('click', () => {
            const visible = buttonSection.style.display !== 'none';
            if (visible) {
                buttonSection.style.opacity = '0';
                setTimeout(() => {
                    buttonSection.style.display = 'none';
                    toggleBtn.textContent = '+';
                    toggleBtn.title = 'Maximize';
                }, 200);
            } else {
                buttonSection.style.display = 'block';
                buttonSection.style.opacity = '0';
                setTimeout(() => {
                    buttonSection.style.opacity = '1';
                    toggleBtn.textContent = '⚊';
                    toggleBtn.title = 'Minimize';
                }, 10);
            }
        });

        // Draggable logic from header
        let isDragging = false, startX = 0, startY = 0, currentX = 0, currentY = 0;
        const header = panel.querySelector('#discount-panel-header');

        header.addEventListener('mousedown', (e) => {
            isDragging = true;
            startX = e.clientX - currentX;
            startY = e.clientY - currentY;
            document.body.style.userSelect = 'none';
        });

        document.addEventListener('mousemove', (e) => {
            if (isDragging) {
                currentX = e.clientX - startX;
                currentY = e.clientY - startY;
                panel.style.transform = `translate(${currentX}px, ${currentY}px)`;
            }
        });

        document.addEventListener('mouseup', () => {
            isDragging = false;
            document.body.style.userSelect = '';
        });
    }

    function waitForPage() {
        const discountField = document.querySelector('#P423_LUMSUM');
        if (discountField) {
            createFloatingPanel();
        } else {
            setTimeout(waitForPage, 1000);
        }
    }

    waitForPage();
})();
